import * as fs from 'fs';

const input = getInput();
const count = input.length * input[0].length;

export function partA() {
    console.log({ count });
    return countGreaterNumbers(input);
}

export function partB() {

}

function getInput() {
    const input = fs.readFileSync('./src/day08input.txt', 'utf8');
    return input.split('\n').map(row => row.split('').map(val => Number(val)));
}

/**
 * The code below here is generated by chatGpt, apart from adding typings
 */
function countGreaterNumbers(grid: number[][]) {
    // Initialize the count of greater numbers to 0
    let count = 0;

    // Loop through each row and column of the grid
    for (let row = 0; row < grid.length; row++) {
      for (let col = 0; col < grid[row].length; col++) {
        // Get the current number at the given row and column
        const currentNumber = grid[row][col];

        // Check if the current number is greater than any number on the same row or column
        if (isGreaterThanAnyInRow(grid, row, currentNumber) || isGreaterThanAnyInCol(grid, col, currentNumber)) {
          // If it is, increment the count
          count++;
        }
      }
    }

    // Return the total count of greater numbers
    return count;
  }

  // Helper function to check if a given number is greater than any number on the given row
  function isGreaterThanAnyInRow(grid: number[][], row: number, number: number) {
    for (let col = 0; col < grid[row].length; col++) {
      if (grid[row][col] > number) {
        return false;
      }
    }
    return true;
  }

  // Helper function to check if a given number is greater than any number on the given column
  function isGreaterThanAnyInCol(grid: number[][], col: number, number: number) {
    for (let row = 0; row < grid.length; row++) {
      if (grid[row][col] > number) {
        return false;
      }
    }
    return true;
  }
